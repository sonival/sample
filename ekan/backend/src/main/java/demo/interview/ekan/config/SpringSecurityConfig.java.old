package demo.interview.ekan.config;


import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.security.config.annotation.web.builders.HttpSecurity;
import org.springframework.security.config.annotation.web.configuration.EnableWebSecurity;
import org.springframework.security.core.userdetails.User;
import org.springframework.security.core.userdetails.UserDetails;
import org.springframework.security.core.userdetails.UserDetailsService;
import org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder;
import org.springframework.security.provisioning.InMemoryUserDetailsManager;
import org.springframework.security.web.SecurityFilterChain;

@Configuration
@EnableWebSecurity
public class SpringSecurityConfig   {
	@Bean
	UserDetailsService userDetailsService() {
	 InMemoryUserDetailsManager userDetailsService = new InMemoryUserDetailsManager();
	 UserDetails user = User.withUsername("demo").password(passwordEncoder().encode("demo"))
	   .authorities("read").build();
	 userDetailsService.createUser(user);
	 return userDetailsService;
	}
	@Bean
	BCryptPasswordEncoder passwordEncoder() {
	 return new BCryptPasswordEncoder();
	}
	@Bean
	SecurityFilterChain filterChain(HttpSecurity http) throws Exception {
	 http.formLogin();
	 http.authorizeHttpRequests().anyRequest().authenticated();
	 return http.build();
	}
}
